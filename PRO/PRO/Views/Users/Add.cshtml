@model PRO.UI.ViewModels.NewUserViewModel
@{
    ViewBag.Title = "Register";
}

<h2 class="list-title box-shadow">Dodaj użytkownika</h2>
<div class="window-background box-shadow p-3">
    <div class="">
        @using (Html.BeginForm("Add", "Users", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(false, "", new { @class = "text-danger" })

            <h3 class="underlined_h2">Podstawowe informacje</h3>
            <br />
            <div class="form-group">
                @Html.LabelFor(m => m.AppUser.Email, new { @class = "col-md-2 control-label" })
                <div class="col-md-12">
                    @Html.TextBoxFor(m => m.AppUser.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.AppUser.Email, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.AppUser.UserName, "Nazwa użytkownika", new { @class = "col-md-2 control-label" })
                <div class="col-md-12">
                    @Html.TextBoxFor(m => m.AppUser.UserName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.AppUser.UserName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                <div class="col-md-12">
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-10 control-label" })
                <div class="col-md-12">
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.AppUser.RegisterDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AppUser.RegisterDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AppUser.RegisterDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.AppUser.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.AppUser.IsActive)
                        @Html.ValidationMessageFor(model => model.AppUser.IsActive, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <br />
            <h3 class="underlined_h2">Dodatkowe informacje</h3>
            <br />
            <div class="form-group">
                @Html.LabelFor(model => model.AppUser.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.AppUser.Description, new { @id = "mytextarea", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.AppUser.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ImageTypes, "Rodzaj obrazka", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select class="selectpicker show-tick" style="max-width:400px;" id="SelectedImageTypeId" name="SelectedImageTypeId" data-live-search="true" onchange="javascript:GetImagesByType(this.value);" title="Wybierz rodzaj obrazka">
                        @foreach (var item in Model.ImageTypes)
                        {
                            <option value="@item.Id">@item.Name</option>
                        }

                    </select>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.AppUser.ImageId, "Obraz", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select class="selectpicker show-tick" style="max-width:400px;" id="ImageId" name="AppUser.ImageId" data-live-search="true" onchange="SetImageId()" title="Wybierz obraz">
                        <option value="0">Brak</option>
                    </select>
                    @Html.ValidationMessageFor(model => model.AppUser.ImageId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.AppUser.IsPublic, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.AppUser.IsPublic)
                        @Html.ValidationMessageFor(model => model.AppUser.IsPublic, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <hr />
            <div class="form-group">
                <div class="col-md-offset-2 col-md-12">
                    <input type="submit" class="btn btn-primary" value="Zarejestruj" />
                    <a href="#" class="btn btn-secondary" onclick="javascript:window.history.back(-1);return false;">Powrót</a>
                </div>
            </div>
        }
    </div>
</div>
<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js"></script>
<script language="javascript" type="text/javascript">

    function GetImagesByType(_stateId) {
        var procemessage = "<option value='0'> Please wait...</option>";
        $("#ImageId").html(procemessage).show();
        var url = "/images/getimagesbytype/" + _stateId;

        $.ajax({
            url: url,
            data: { id: _stateId },
            cache: false,
            type: "POST",
            success: function (data) {
                if (data.length > 0) {
                    var markup = "<option value=\"0\">Brak</option>";
                } else {
                    var markup = "<option value=\"0\">Brak obrazków wybranego typu</option>";
                }

                for (var x = 0; x < data.length; x++) {
                    markup += "<option value=" + data[x].value + ">" + data[x].text + "</option>";
                }
                $("#ImageId").html(markup).show();
                $('#ImageId').selectpicker("refresh");
            },
            error: function (reponse) {
                alert("error : " + reponse);
            }
        });

    }


</script>

<script>
    function SetImageId() {
        var id = $('#AppUser.ImageId').find(":selected").Value;
        console.log(id);
    }
</script>
@section scripts{
    <partial name="_ValidationScriptsPartial" />
}
