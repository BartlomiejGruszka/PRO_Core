@model PRO.UI.ViewModels.GameFormViewModel

@{
    ViewBag.Title = "View";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<h2 class="list-title box-shadow">Edytuj grę</h2>
<div class="window-background box-shadow p-3">
    @using (Html.BeginForm("Edit", "Games"))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h3 class="underlined_h2">Podstawowe informacje</h3>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Game.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.Game.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Game.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Game.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Game.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Game.Description, new { @id = "mytextarea", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Game.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Game.PlatformId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select class="selectpicker show-tick" style="max-width:400px;" id="Game.PlatformId" name="Game.PlatformId" data-live-search="true" title="Wybierz platformę" required>
                        <option value="@null">Wybierz platformę</option>
                        @foreach (var item in Model.Platforms)
                        {
                            if (Model.Game.PlatformId == item.Id)
                            {
                                <option selected value="@item.Id">@item.Name</option>
                            }
                            else
                            {
                                <option value="@item.Id">@item.Name</option>
                            }
                        }

                    </select>
                    <div>@Html.ValidationMessageFor(model => model.Game.PlatformId, "", new { @class = "text-danger" })</div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Game.StatusId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select class="selectpicker show-tick" style="max-width:400px;" id="Game.StatusId" name="Game.StatusId" data-live-search="true" title="Wybierz status" required>
                        <option value="@null">Wybierz status</option>
                        @foreach (var item in Model.Statuses)
                        {
                            if (Model.Game.StatusId == item.Id)
                            {
                                <option selected value="@item.Id">@item.Name</option>
                            }
                            else
                            {
                                <option value="@item.Id">@item.Name</option>
                            }
                        }

                    </select>
                    <div>@Html.ValidationMessageFor(model => model.Game.StatusId, "", new { @class = "text-danger" })</div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Game.GenreId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select class="selectpicker show-tick" style="max-width:400px;" id="Game.GenreId" name="Game.GenreId" data-live-search="true" title="Wybierz gatunek" required>
                         <option value="@null">Wybierz gatunek</option>
                        @foreach (var item in Model.Genres)
                        {
                            if (Model.Game.GenreId == item.Id)
                            {
                                <option selected value="@item.Id">@item.Name</option>
                            }
                            else
                            {
                                <option value="@item.Id">@item.Name</option>
                            }
                        }

                    </select>
                    <div>@Html.ValidationMessageFor(model => model.Game.GenreId, "", new { @class = "text-danger" })</div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Game.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Game.IsActive)
                        @Html.ValidationMessageFor(model => model.Game.IsActive, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <br />
            <h3 class="underlined_h2">Dodatkowe informacje</h3>
            <br />
            <div class="form-group">
                @Html.LabelFor(model => model.Game.ReleaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Game.ReleaseDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Game.ReleaseDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Game.Series, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select class="selectpicker show-tick" style="max-width:400px;" id="Game.SeriesId" name="Game.SeriesId" data-live-search="true" title="Wybierz serię">
                         <option value="@null">Wybierz serię</option>
                        @foreach (var item in Model.Series)
                        {
                            if (Model.Game.SeriesId == item.Id)
                            {
                                <option selected value="@item.Id">@item.Name</option>
                            }
                            else
                            {
                                <option value="@item.Id">@item.Name</option>
                            }
                        }

                    </select>
                    <div>@Html.ValidationMessageFor(model => model.Game.SeriesId, "", new { @class = "text-danger" })</div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ImageTypes, "Rodzaj obrazka", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select class="selectpicker show-tick" id="SelectedImageTypeId" name="SelectedImageTypeId" data-live-search="true" onchange="javascript:GetImagesByType(this.value);" title="Wybierz rodzaj obrazka">
                          <option value="@null">Wybierz rodzaj obrazka</option>
                        @foreach (var item in Model.ImageTypes)
                        {
                            <option value="@item.Id">@item.Name</option>
                        }

                    </select>
                    <div>@Html.ValidationMessageFor(model => model.Game.PublisherId, "", new { @class = "text-danger" })</div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Game.ImageId, "Obraz", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select class="selectpicker show-tick" style="max-width:400px;" id="ImageId" name="Game.ImageId" data-live-search="true" onchange="SetImageId()" title="Wybierz obraz">
                        <option value="@null">Wybierz obraz</option>
                        @if (Model.Game.Image != null)
                        {
                            <option selected value="@Model.Game.ImageId">@Model.Game.Image.Name</option>
                        }
                    </select>
                    <div>@Html.ValidationMessageFor(model => model.Game.ImageId, "", new { @class = "text-danger" })</div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Game.PublisherId, "Wydawca", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select class="selectpicker show-tick" style="max-width:400px;" id="Game.PublisherId" name="Game.PublisherId" data-live-search="true" title="Wybierz wydawcę">
                       <option value="@null">Wybierz wydawcę</option>
                        @foreach (var item in Model.Publishers)
                        {
                            if (Model.Game.PublisherId == item.Id)
                            {
                                <option selected value="@item.Id">@item.Name</option>
                            }
                            else
                            {
                                <option value="@item.Id">@item.Name</option>
                            }
                        }

                    </select>
                    <div>@Html.ValidationMessageFor(model => model.Game.PublisherId, "", new { @class = "text-danger" })</div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Game.DeveloperId, "Producent", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select class="selectpicker show-tick" style="max-width:400px;" id="Game.DeveloperId" name="Game.DeveloperId" data-live-search="true" title="Wybierz producenta">
                       <option value="@null">Wybierz producenta</option>
                        @foreach (var item in Model.Developers)
                        {
                            if (Model.Game.DeveloperId == item.Id)
                            {
                                <option selected value="@item.Id">@item.Name</option>
                            }
                            else
                            {
                                <option value="@item.Id">@item.Name</option>
                            }

                        }

                    </select>
                    <div>@Html.ValidationMessageFor(model => model.Game.DeveloperId, "", new { @class = "text-danger" })</div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Game.Languages, "Języki", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select class="selectpicker show-tick" style="max-width:400px;" id="selectedLanguagesId" name="selectedLanguagesId" data-live-search="true" multiple title="Wybierz języki">
                        @foreach (var item in Model.Languages)
                        {
                            if (Model.Game.Languages.Where(s => s.Id == item.Id).ToList().Any())
                            {
                                <option selected class="active" value="@item.Id">@item.Name</option>
                            }
                            else
                            {
                                <option value="@item.Id">@item.Name</option>
                            }
                        }

                    </select>
                    <div>@Html.ValidationMessageFor(model => model.Game.Languages, "", new { @class = "text-danger" })</div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Game.Tags, "Tagi", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select class="selectpicker show-tick" style="max-width:400px;" id="selectedTagsId" name="selectedTagsId" data-live-search="true" multiple title="Wybierz tagi">
                        @foreach (var item in Model.Tags)
                        {
                            if (Model.Game.Tags.Where(s => s.Id == item.Id).ToList().Any())
                            {
                                <option selected class="active" value="@item.Id">@item.Name</option>
                            }
                            else
                            {
                                <option value="@item.Id">@item.Name</option>
                            }


                        }

                    </select>
                    <div>@Html.ValidationMessageFor(model => model.Game.Tags, "", new { @class = "text-danger" })</div>
                </div>
            </div>
                         <br />
            <h3 class="underlined_h2">Integracja z zewnętrznymi platformami</h3>
            <br />
            <div class="form-group">
                @Html.LabelFor(model => model.Game.SteamAppId, "Filtruj aplikacje Steam", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select class="selectpicker show-tick" style="max-width:400px;" id="SelectedCharacter" name="SelectedCharacter" data-live-search="true" title="Pierwszy znak nazwy gry" onchange="javascript:GetSteamGamesByLetter(this.value);">
                        @foreach (var item in Model.FilterLetters)
                        {
                            <option value="@item">@item</option>
                        }

                    </select>
                    <div>@Html.ValidationMessageFor(model => model.Game.SteamAppId, "", new { @class = "text-danger" })</div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Game.SteamAppId, "Aplikacja Steam", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select class="selectpicker show-tick" style="max-width:400px;" id="SteamAppId" name="Game.SteamAppId" data-live-search="true" title="Wybierz grę Steam">
                        
                        @if (@Model.Game.SteamAppId.HasValue)
                        {

                            <option selected class="active" value="@Model.Game.SteamAppId">@Model.Game.Title</option>
                        }
                        else
                        {
                            <option value="0">Brak</option>
                        }


                        }
                    </select>
                    <div>@Html.ValidationMessageFor(model => model.Game.SteamAppId, "", new { @class = "text-danger" })</div>
                </div>
            </div>
        </div>
        <hr />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Zapisz" class="btn btn-primary" />
                <a href="#" class="btn btn-secondary" onclick="javascript:window.history.back(-1);return false;">Powrót</a>

            </div>
        </div>
    }
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js"></script>
<script language="javascript" type="text/javascript">

    function GetImagesByType(_stateId) {
        var procemessage = "<option value='0'> Please wait...</option>";
        $("#ImageId").html(procemessage).show();
        var url = "/images/getimagesbytype/" + _stateId;

        $.ajax({
            url: url,
            data: { id: _stateId },
            cache: false,
            type: "POST",
            success: function (data) {
                if (data.length > 0) {
                    var markup = "<option value=\"0\">Wybierz obrazek</option>";
                } else {
                    var markup = "<option value=\"0\">Brak obrazków wybranego typu</option>";
                }

                for (var x = 0; x < data.length; x++) {
                    markup += "<option value=" + data[x].value + ">" + data[x].text + "</option>";
                }
                $("#ImageId").html(markup).show();
                $('#ImageId').selectpicker("refresh");
            },
            error: function (reponse) {
                alert("error : " + reponse);
            }
        });

    }


</script>
<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js"></script>
<script language="javascript" type="text/javascript">

    function GetSteamGamesByLetter(_stateId) {
        var procemessage = "<option value='0'> Please wait...</option>";
        $("#SteamAppId").html(procemessage).show();
        var url = "/games/getsteamgames/" + _stateId;

        $.ajax({
            url: url,
            data: { id: _stateId },
            cache: false,
            type: "POST",
            success: function (data) {
                if (data.length > 0) {
                    var markup = "<option value=\"0\">Wybierz grę</option>";
                } else {
                    var markup = "<option value=\"0\">Brak gier/option>";
                }

                for (var x = 0; x < data.length; x++) {
                    markup += "<option value=" + data[x].value + ">" + data[x].text + "</option>";
                }
                $("#SteamAppId").html(markup).show();
                $('#SteamAppId').selectpicker("refresh");
            },
            error: function (reponse) {
                alert("error : " + reponse);
            }
        });

    }


</script>
<script>
    function SetImageId() {
        var id = $('#ImageId').find(":selected").Value;
        console.log(id);
    }
</script>
@section scripts{
    <partial name="_ValidationScriptsPartial" />
}
