@model PRO.UI.ViewModels.GameFormViewModel

@{
    ViewBag.Title = "Add";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Dodaj nową grę</h2>

@using (Html.BeginForm("Add", "Games"))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Game.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Game.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Game.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Game.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Game.Description, new { @id = "mytextarea", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Game.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Game.ReleaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Game.ReleaseDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Game.ReleaseDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Game.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Game.IsActive)
                @Html.ValidationMessageFor(model => model.Game.IsActive, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Game.PlatformId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select class="selectpicker show-tick" style="max-width:400px;" id="Game.PlatformId" name="Game.PlatformId" data-live-search="true" title="Wybierz platformę">
                @foreach (var item in Model.Platforms)
                {
                    <option value="@item.Id">@item.Name</option>
                }

            </select>
            @Html.ValidationMessageFor(model => model.Game.PlatformId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Game.StatusId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select class="selectpicker show-tick" style="max-width:400px;" id="Game.StatusId" name="Game.StatusId" data-live-search="true" title="Wybierz status">
                @foreach (var item in Model.Statuses)
                {
                    <option value="@item.Id">@item.Name</option>
                }

            </select>
            @Html.ValidationMessageFor(model => model.Game.StatusId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Game.GenreId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select class="selectpicker show-tick" style="max-width:400px;" id="Game.GenreId" name="Game.GenreId" data-live-search="true" title="Wybierz gatunek">
                @foreach (var item in Model.Genres)
                {
                    <option value="@item.Id">@item.Name</option>
                }

            </select>
            @Html.ValidationMessageFor(model => model.Game.GenreId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Game.Series, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select class="selectpicker show-tick" style="max-width:400px;" id="Game.SeriesId" name="Game.SeriesId" data-live-search="true" title="Wybierz serię">
                @foreach (var item in Model.Series)
                {
                    <option value="@item.Id">@item.Name</option>
                }

            </select>
            @Html.ValidationMessageFor(model => model.Game.SeriesId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.ImageTypes, "Rodzaj obrazka", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select class="selectpicker show-tick" style="max-width:400px;" id="SelectedImageTypeId" name="SelectedImageTypeId" data-live-search="true" onchange="javascript:GetImagesByType(this.value);" title="Wybierz rodzaj obrazka">
                @foreach (var item in Model.ImageTypes)
                {
                    <option value="@item.Id">@item.Name</option>
                }

            </select>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Game.ImageId, "Obraz", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select class="selectpicker show-tick" style="max-width:400px;" id="ImageId" name="Game.ImageId" data-live-search="true" onchange="SetImageId()" title="Wybierz obraz">
                <option value="0">Brak</option>
            </select>
            @Html.ValidationMessageFor(model => model.Game.ImageId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Game.PublisherId, "Wydawca", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select class="selectpicker show-tick" style="max-width:400px;" id="Game.PublisherId" name="Game.PublisherId" data-live-search="true" title="Wybierz wydawcę">
                @foreach (var item in Model.Publishers)
                {
                    <option value="@item.Id">@item.Name</option>
                }

            </select>
            @Html.ValidationMessageFor(model => model.Game.PublisherId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Game.DeveloperId, "Producent", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select class="selectpicker show-tick" style="max-width:400px;" id="Game.DeveloperId" name="Game.DeveloperId" data-live-search="true" title="Wybierz producenta">
                @foreach (var item in Model.Developers)
                {
                    <option value="@item.Id">@item.Name</option>
                }

            </select>
            @Html.ValidationMessageFor(model => model.Game.DeveloperId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Game.Languages, "Języki", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select class="selectpicker show-tick" style="max-width:400px;" id="selectedLanguagesId" name="selectedLanguagesId" data-live-search="true" multiple title="Wybierz języki">
                @foreach (var item in Model.Languages)
                {
                    <option value="@item.Id">@item.Name</option>
                }

            </select>
            @Html.ValidationMessageFor(model => model.Game.Languages, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Game.Tags, "Tagi", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select class="selectpicker show-tick" style="max-width:400px;" id="selectedTagsId" name="selectedTagsId" data-live-search="true" multiple title="Wybierz tagi">
                @foreach (var item in Model.Tags)
                {
                    <option value="@item.Id">@item.Name</option>
                }

            </select>
            @Html.ValidationMessageFor(model => model.Game.Tags, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Game.SteamAppId, "Filtruj aplikacje Steam", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select class="selectpicker show-tick" style="max-width:400px;" id="SelectedCharacter" name="SelectedCharacter" data-live-search="true" title="Pierwszy znak nazwy gry" onchange="javascript:GetSteamGamesByLetter(this.value);">
                @foreach (var item in Model.FilterLetters)
                {
                    <option value="@item">@item</option>
                }

            </select>
            @Html.ValidationMessageFor(model => model.Game.SteamAppId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Game.SteamAppId, "Obraz", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select class="selectpicker show-tick" style="max-width:400px;" id="SteamAppId" name="Game.SteamAppId" data-live-search="true" title="Wybierz grę Steam">
                <option value="0">Brak</option>
            </select>
            @Html.ValidationMessageFor(model => model.Game.SteamAppId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button type="submit" class="btn btn-primary">Dodaj</button>
            <a href="#" class="btn btn-secondary" onclick="javascript:window.history.back(-1);return false;">Powrót</a>

        </div>
    </div>
</div>
}
<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js"></script>
<script language="javascript" type="text/javascript">

    function GetImagesByType(_stateId) {
        var procemessage = "<option value='0'> Please wait...</option>";
        $("#ImageId").html(procemessage).show();
        var url = "/images/getimagesbytype/" + _stateId;

        $.ajax({
            url: url,
            data: { id: _stateId },
            cache: false,
            type: "POST",
            success: function (data) {
                if (data.length > 0) {
                    var markup = "<option value=\"0\">Wybierz obrazek</option>";
                } else {
                    var markup = "<option value=\"0\">Brak obrazków wybranego typu</option>";
                }

                for (var x = 0; x < data.length; x++) {
                    markup += "<option value=" + data[x].value + ">" + data[x].text + "</option>";
                }
                $("#ImageId").html(markup).show();
                $('#ImageId').selectpicker("refresh");
            },
            error: function (reponse) {
                alert("error : " + reponse);
            }
        });

    }


</script>
<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js"></script>
<script language="javascript" type="text/javascript">

    function GetSteamGamesByLetter(_stateId) {
        var procemessage = "<option value='0'> Please wait...</option>";
        $("#SteamAppId").html(procemessage).show();
        var url = "/games/getsteamgames/" + _stateId;

        $.ajax({
            url: url,
            data: { id: _stateId },
            cache: false,
            type: "POST",
            success: function (data) {
                if (data.length > 0) {
                    var markup = "<option value=\"0\">Wybierz obrazek</option>";
                } else {
                    var markup = "<option value=\"0\">Brak obrazków wybranego typu</option>";
                }

                for (var x = 0; x < data.length; x++) {
                    markup += "<option value=" + data[x].value + ">" + data[x].text + "</option>";
                }
                $("#SteamAppId").html(markup).show();
                $('#SteamAppId').selectpicker("refresh");
            },
            error: function (reponse) {
                alert("error : " + reponse);
            }
        });

    }


</script>

<script>
    function SetImageId() {
        var id = $('#ImageId').find(":selected").Value;
        console.log(id);
    }
</script>
@section scripts{
    <partial name="_ValidationScriptsPartial" />
}