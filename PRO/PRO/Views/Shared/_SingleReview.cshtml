@model PRO.Domain.HelperClasses.ReviewPlaytime
@using PRO.Domain.Extensions
@using System.Text.RegularExpressions;
@{string StripHTML(string input, int length)
    {
        if (!string.IsNullOrEmpty(input))
        {
            input = Regex.Replace(input, "<.*?>", String.Empty);
            input = Regex.Replace(input, "&nbsp;", " ");
            input = input.Truncate(length);
            return input;
        }
        else
        {
            return "";
        }
    }
}
<div class="borderDark" style="padding: 4px 0;">
    <div class="spaceit" style="display: flex; justify-content: space-between;">

        <div style="float: left; padding-bottom:12px;">
            <table border="0" cellpadding="0" cellspacing="0" width="100%" style="padding-left: 3px;">
                <tbody>

                    @if (ViewContext.RouteData.Values["controller"].ToString() == "Users")
                    {
                        <tr>
                            <td valign="top" width="60">
                                <div class="">

                                    @if (Model.Review.Game.Image != null)
                                    {<a href="/games/@Model.Review.GameId">
                                            <img style="max-width: 100%; max-height: 100%;" class=" lazyloaded" src="/images/@Model.Review.Game.Image.ImagePath">
                                        </a>
                                    }

                                </div>
                            </td>
                            <td valign="top" style="padding-left: 10px;">
                                <a href="/games/@Model.Review.GameId">@Model.Review.Game.Title</a>
                            </td>
                        </tr>
                    }
                    else
                    {
                        <tr>
                            <td valign="top" width="60">
                                <div class="">

                                    @if (Model.Review.User.Image != null)
                                    {<a href="/users/@Model.Review.UserId">
                                            <img style="max-width: 100%; max-height: 100%;" class=" lazyloaded" src="/images/@Model.Review.User.Image.ImagePath">
                                        </a>
                                    }

                                </div>
                            </td>
                            <td valign="top" style="padding-left: 10px;">
                                <a href="/users/@Model.Review.UserId">@Model.Review.User.UserName</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="mb8" style="float: right; text-align: right;">
            <div title="">@Model.Review.ReviewDate.ToShortDateString()</div>
            <div class="lightLink spaceit">
                @{int? myInt = Model.Playtime == null ? 0 : Model.Playtime; }
                Rozegrane: @myInt h
            </div>
            @{
                {
                    int avg = (Model.Review.GameplayScore + Model.Review.GraphicsScore + Model.Review.MusicScore + Model.Review.StoryScore) / 4;
                    if (Model.Review.EditDate != null)
                    { <div class="lightLink spaceit">
                            Średnia ocena: @avg
                        </div>
                        <div>
                            Edytowano: @Model.Review.EditDate.Value.ToShortDateString()
                        </div>
                    }
                    else
                    {
                        <div>
                            Średnia ocena: @avg
                        </div>
                    }


                } }

        </div>

    </div>
    @{ if (ViewContext.RouteData.Values["action"].ToString() == "SingleReview")
        {
            <div class="spaceit" style="clear: both; border-top: 1px solid #ebebeb; display:flex; justify-content:flex-end; flex-direction:column">
                <p class="reviewRatings">Grywalność:    @Model.Review.GameplayScore</p>
                <p class="reviewRatings">Grafika:   @Model.Review.GraphicsScore</p>
                <p class="reviewRatings">Fabuła:    @Model.Review.StoryScore</p>
                <p class="reviewRatings">Muzyka:    @Model.Review.MusicScore</p>
            </div>}
    }

    <div class="spaceit textReadability word-break pt8 mt8" style="clear: both; border-top: 1px solid #ebebeb; border-bottom: 1px solid #ebebeb;">



        @{ if (ViewContext.RouteData.Values["action"].ToString() != "SingleReview")
            {
                var content = StripHTML(Model.Review.Content, 200);
                if (content.Length == 200) content = content + "...";
                @Html.Raw(content)
                <a href="/games/@Model.Review.GameId/reviews/@Model.Review.Id">więcej </a>
            }
            else
            {
                @Html.Raw(@Model.Review.Content)
            }
        }

    </div>

</div>
