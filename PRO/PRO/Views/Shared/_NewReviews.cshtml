@model IEnumerable<PRO.Entities.Review>
@using PRO.Domain.Extensions

@using System.Text.RegularExpressions;

@{string StripHTML(string input, int length)
    {
        if (!string.IsNullOrEmpty(input))
        {
            input = Regex.Replace(input, "<.*?>", String.Empty);
            input = Regex.Replace(input, "&nbsp;", " ");
            input = input.Truncate(length);
            return input;
        }
        else
        {
            return "";
        }
    }
}
<div class="side-list-group">
    <h3 class="sidebar-title list-title box-shadow">Najnowsze recenzje</h3>
    @{ var reviews = Model.ToList();
        if (reviews.Any())
        {
            for (var i = 0; i < 3; i++)
            {
                if (reviews.ElementAtOrDefault(i) != null)
                { <div>
                        <a href="/games/@reviews[i].GameId/reviews/@reviews[i].Id" class="list-group-item list-group-item-action flex-column align-items-start box-shadow">

                            <div class="d-flex w-100 justify-content-between">
                                <h5 class="mb-1">@reviews[i].Game.Title</h5>
                            </div>

                            <p class="mb-1" style="font-weight:400;">
                                @{ var content = @StripHTML(reviews[i].Content, 120);
                                    if (content.Length == 120)
                                    {
                                        content = content + "...";
                                    }
                                }
                                @Html.Raw(content)
                                @*@Html.Raw("<div style=\"font-weight:400;\">" + @reviews[i].Content.Truncate(120) + "..." + "</div>")*@
                            </p>



                            <small class="">@reviews[i].User.UserName</small>
                        </a>
                    </div>
                }

            }
        }
    }
</div>