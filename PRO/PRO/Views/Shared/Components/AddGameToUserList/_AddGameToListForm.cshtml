@model PRO.Entities.GameList


@using (Html.BeginForm("AddGameToList", "GameLists"))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.AddedDate, new { Value = Model.AddedDate })

    <input data-val="true" data-val-required="The Int32 field is required." id="GameId" name="GameId" type="hidden" value="@ViewBag.GameId">
    <input data-val="true" data-val-required="The Int32 field is required." id="Id" name="Id" type="hidden" value="@ViewBag.Id">

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.HoursPlayed, htmlAttributes: new { @class = "control-label col-md-2", @style = "display: contents " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HoursPlayed, new { htmlAttributes = new { @class = "form-control", @min = "0", @max = "99999" } })
                @Html.ValidationMessageFor(model => model.HoursPlayed, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PersonalScore, htmlAttributes: new { @class = "control-label col-md-2", @style = "display: contents " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PersonalScore, new { htmlAttributes = new { @class = "form-control", @min = "0", @max = "10" } })
                @Html.ValidationMessageFor(model => model.PersonalScore, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.UserListId, "Lista użytkownika", htmlAttributes: new { @class = "control-label col-md-2", @style = "display: contents " })
            <div class="col-md-10">
                @Html.DropDownList("UserListId", new SelectList(ViewBag.userLists, "Id", "Name"), "Wybierz listę", htmlAttributes: new { @class = "form-control", @value = 0 })
                @Html.ValidationMessageFor(model => model.UserListId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Zapisz" class="btn btn-primary" />
            </div>
        </div>
    </div>
}
