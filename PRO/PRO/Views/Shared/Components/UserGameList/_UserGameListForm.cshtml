@model PRO.Entities.GameList


@using (Html.BeginForm("UserEdit", "GameLists", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.AddedDate, new { Value = Model.AddedDate })
    <input data-val="true" data-val-required="The Int32 field is required." id="Id" name="Id" type="hidden" value="@ViewBag.Id">



    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.GameId, "Gra", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select class="selectpicker show-tick" style="max-width:400px;" id="GameId" name="GameId" data-live-search="true" title="Wybierz grę">
                @foreach (var item in ViewBag.Games)
                {

                    if (Model.GameId == item.Id)
                    {
                        <option selected value="@item.Id">@item.Title</option>
                    }
                    else
                    {
                        <option value="@item.Id">@item.Title</option>
                    }
                }

            </select>
            @Html.ValidationMessageFor(model => model.GameId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.HoursPlayed, htmlAttributes: new { @class = "control-label col-md-2", @style = "display: inline; " })
        <div class="col-md-10">
            @Html.EditorFor(model => model.HoursPlayed, new { htmlAttributes = new { @class = "form-control", @min = "0", @max = "99999", @Value = "0" } })
            @Html.ValidationMessageFor(model => model.HoursPlayed, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PersonalScore, htmlAttributes: new { @class = "control-label col-md-2", @style = "display: inline; " })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PersonalScore, new { htmlAttributes = new { @class = "form-control", @min = "0", @max = "10" } })
            @Html.ValidationMessageFor(model => model.PersonalScore, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.UserListId, "Lista użytkownika", htmlAttributes: new { @class = "control-label col-md-2", @style = "display: inline; " })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.UserListId, new SelectList(ViewBag.UserListId, "Id", "Name"), "Wybierz listę", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.UserListId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Zapisz" class="btn btn-primary" />
        </div>
    </div>

}
