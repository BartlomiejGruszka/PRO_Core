@model PRO.Domain.Entities.Review


@using (Html.BeginForm("UserReview", "Reviews"))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(false, "", new { @class = "text-danger" })
    @{ var revid = 0;
        var revdate = ViewBag.ReviewDate;
        if (ViewBag.ReviewId != null) revid = ViewBag.ReviewId;
        }
    <input data-val="true" data-val-required="The Int32 field is required." id="ReviewDate" name="ReviewDate" type="hidden" value="@ViewBag.ReviewDate">
    <input data-val="true" data-val-required="The Int32 field is required." id="AddedDate" name="GameId" type="hidden" value="@ViewBag.GameId">
    <input data-val="true" data-val-required="The Int32 field is required." id="UserId" name="UserId" type="hidden" value="@ViewBag.UserId">
    <input data-val="true" data-val-required="The Int32 field is required." id="Id" name="Id" type="hidden" value="@revid">
    <div class="form-group">
        @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Content, new { @id = "mytextarea", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.GraphicsScore, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.GraphicsScore, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.GraphicsScore, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StoryScore, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.StoryScore, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.StoryScore, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MusicScore, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MusicScore, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MusicScore, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.GameplayScore, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.GameplayScore, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.GameplayScore, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Zapisz" class="btn btn-primary" />
            @if(!(User.IsInRole("Admin") || User.IsInRole("Moderator"))&& revid > 0){
                  <a href="/games/@ViewBag.GameId/userdelete" class="btn btn-secondary">Usuń</a>
                }
                @if((User.IsInRole("Admin") || User.IsInRole("Moderator"))&& revid > 0)
                {
                     <a href="/games/userdelete?gameid=@ViewBag.GameId&reviewid=@revid" class="btn btn-secondary">Usuń</a>
                }
            <a href="/games/@ViewBag.GameId" class="btn btn-secondary">Powrót</a>
        </div>
    </div>
</div>
}
@section scripts{
    <partial name="_ValidationScriptsPartial" />
}